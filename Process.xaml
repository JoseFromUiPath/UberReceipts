<Activity mc:Ignorable="sap sap2010" x:Class="ProcessTransaction" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_TransactionItem" Type="InArgument(snm:MailMessage)" />
    <x:Property Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>862,1110</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ProcessTransaction_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Description: In this file all other process specific files will be invoked. If an application exception occurs, the current transaction can be retried. If a BRE is thrown, the transaction will be skipped. Can be a flowchart or sequence. " DisplayName="ProcessTransaction" sap:VirtualizedContainerService.HintSize="822,1030" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Double" Name="Total" />
      <Variable x:TypeArguments="x:Double" Name="Subtotal" />
      <Variable x:TypeArguments="x:Double" Name="StateSurcharge" />
      <Variable x:TypeArguments="x:Double" Name="AmountCharged" />
      <Variable x:TypeArguments="x:Double" Name="Promotions" />
      <Variable x:TypeArguments="x:Double" Name="TollsAndFees" />
      <Variable x:TypeArguments="x:String" Name="Driver" />
      <Variable x:TypeArguments="x:String" Name="Distance" />
      <Variable x:TypeArguments="x:String" Name="Duration" />
      <Variable x:TypeArguments="x:String" Name="StartTime" />
      <Variable x:TypeArguments="x:String" Name="EndTime" />
      <Variable x:TypeArguments="x:String" Name="StartLocation" />
      <Variable x:TypeArguments="x:String" Name="EndLocation" />
      <Variable x:TypeArguments="x:String" Name="TripDate" />
      <Variable x:TypeArguments="x:Double" Name="Tip" />
      <Variable x:TypeArguments="x:String" Name="TripID" />
      <Variable x:TypeArguments="x:String" Name="Status" />
      <Variable x:TypeArguments="x:Double" Name="CancellationFee" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <If Condition="[in_TransactionItem.Subject.ToLower.Contains(&quot;canceled trip&quot;)]" sap:VirtualizedContainerService.HintSize="800,608" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="511,458" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[Boolean.Parse(in_Config(&quot;IncludeCanceledTrips&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="489,334" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="264,184" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_1">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[Status]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">Canceled</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <TerminateWorkflow DisplayName="Terminate Workflow" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" Reason="Not processing cancelled trips" />
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="264,184" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[Status]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">Completed</InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </If.Else>
    </If>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke ParseReceiptValues workflow" sap:VirtualizedContainerService.HintSize="800,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="ParseReceiptValues.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:String" x:Key="in_ReceiptText">[in_TransactionItem.Body]</InArgument>
        <OutArgument x:TypeArguments="x:Double" x:Key="out_Total">[Total]</OutArgument>
        <OutArgument x:TypeArguments="x:Double" x:Key="out_Subtotal">[Subtotal]</OutArgument>
        <OutArgument x:TypeArguments="x:Double" x:Key="out_StateSurcharge">[StateSurcharge]</OutArgument>
        <OutArgument x:TypeArguments="x:Double" x:Key="out_AmountCharged">[AmountCharged]</OutArgument>
        <OutArgument x:TypeArguments="x:Double" x:Key="out_Promotions">[Promotions]</OutArgument>
        <OutArgument x:TypeArguments="x:Double" x:Key="out_TollsAndFees">[TollsAndFees]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Driver">[Driver]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Distance">[Distance]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Duration">[Duration]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_StartTime">[StartTime]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_EndTime">[EndTime]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_StartLocation">[StartLocation]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_EndLocation">[EndLocation]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_Date">[TripDate]</OutArgument>
        <OutArgument x:TypeArguments="x:Double" x:Key="out_Tip">[Tip]</OutArgument>
        <OutArgument x:TypeArguments="x:String" x:Key="out_TripID">[TripID]</OutArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Status">[Status]</InArgument>
        <OutArgument x:TypeArguments="x:Double" x:Key="out_CancellationFee">[CancellationFee]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke WriteTripToFile workflow" sap:VirtualizedContainerService.HintSize="800,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="WriteTripToFile.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="x:Double" x:Key="in_Total">[Total]</InArgument>
        <InArgument x:TypeArguments="x:Double" x:Key="in_Subtotal">[Subtotal]</InArgument>
        <InArgument x:TypeArguments="x:Double" x:Key="in_StateSurcharge">[StateSurcharge]</InArgument>
        <InArgument x:TypeArguments="x:Double" x:Key="in_TollsAndFees">[TollsAndFees]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Driver">[Driver]</InArgument>
        <InArgument x:TypeArguments="x:Object" x:Key="in_StartLocation">[StartLocation]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_StartTime">[StartTime]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_EndTime">[EndTime]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_EndLocation">[EndLocation]</InArgument>
        <InArgument x:TypeArguments="x:Double" x:Key="in_Promotions">[Promotions]</InArgument>
        <InArgument x:TypeArguments="x:Double" x:Key="in_AmountCharged">[AmountCharged]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_TripDate">[Convert.ToDateTime(in_TransactionItem.Headers("Date").ToString).ToString("MM.dd.yyyy")]</InArgument>
        <InArgument x:TypeArguments="x:Double" x:Key="in_Tip">[Tip]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_TripID">[TripID]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="in_Status">[Status]</InArgument>
        <InArgument x:TypeArguments="x:Double" x:Key="in_CancellationFee">[CancellationFee]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
  </Sequence>
</Activity>